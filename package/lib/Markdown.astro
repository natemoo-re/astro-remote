---
import type { SanitizeOptions } from 'ultrahtml/transformers/sanitize'
import { createComponentProxy, markdown } from './utils';
import type { MarkedExtension } from 'marked';

export interface Props {
  content?: string;
  sanitize?: SanitizeOptions;
  components?: Record<string, any>;
  markedExt?: MarkedExtension[]
}

const input = Astro.props.content ?? await Astro.slots.render('default');
if (!input) {
  throw new Error('Unable to render <Markdown> without a content prop or children')
}
// @ts-ignore
const components = createComponentProxy($$result, Astro.props.components);
const content = await markdown(input, { components }, Astro.props.markedExt);
---

<Fragment set:html={content} />
